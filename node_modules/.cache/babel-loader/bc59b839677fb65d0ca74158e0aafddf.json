{"ast":null,"code":"var _jsxFileName = \"/Users/Sweety/Documents/test/c1736c50-23ff-4316-a5c4-a2a19c04093d/src/Components/Search.js\";\nimport React, { useState } from 'react';\nimport { STUDENTS } from '../studentsList'; // `joiningDate` && `validityDate` format \"yyyy-mm-dd\"\n\nfunction checkValidity(joiningDate, validityDate) {\n  const now = new Date();\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  const [year, month, day] = joiningDate.split('-');\n  const [yyyy, mm, dd] = validityDate.split('-');\n  const maxValid = new Date(yyyy, mm - 1, dd);\n  const selected = new Date(year, month - 1, day);\n  return maxValid >= selected && maxValid >= today;\n}\n\nfunction Search({\n  onSubmit\n}) {\n  const [name, setName] = useState();\n  const [date, setDate] = useState();\n\n  const resetValues = () => {\n    setDate('');\n    setName('');\n  };\n\n  const validateValue = (joinDate, student) => {\n    if (student) {\n      console.log({\n        student,\n        joinDate,\n        validity: student.validityDate\n      });\n      const isStudentExpired = checkValidity(joinDate, student.validityDate);\n      console.log(\"isStudentExpired\", isStudentExpired);\n      return {\n        error: isStudentExpired ? `Sorry, ${name}'s validity has Expired!` : null\n      };\n    }\n\n    return {\n      error: `Sorry, ${name} is not a verified student!`\n    };\n  };\n\n  const handleClick = () => {\n    const studentInfo = STUDENTS.find(item => name.toUpperCase() === item.name.toUpperCase()); // const validate = validateValue(date, studentInfo);\n    // const submitParameters = validate.error || { data: studentInfo };\n    // console.log({submitParameters})\n    // onSubmit(submitParameters)\n\n    if (studentInfo) {\n      const isValid = checkValidity(date, studentInfo.validityDate);\n      isValid ? onSubmit({\n        data: studentInfo\n      }) : onSubmit({\n        error: `Sorry, ${name}'s validity has Expired!`\n      });\n    } else {\n      onSubmit({\n        error: `Sorry, ${name} is not a verified student!`\n      });\n    } // resetValues()\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-50 layout-row align-items-end justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"studentName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, \"Student Name:\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: name,\n    id: \"studentName\",\n    \"data-testid\": \"studentName\",\n    type: \"text\",\n    className: \"mr-30 mt-10\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"joiningDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, \"Joining Date:\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: date,\n    id: \"joiningDate\",\n    \"data-testid\": \"joiningDate\",\n    type: \"date\",\n    className: \"mr-30 mt-10\",\n    onChange: e => setDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"addBtn\",\n    className: \"small mb-0\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }\n  }, \"Add\"));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/Sweety/Documents/test/c1736c50-23ff-4316-a5c4-a2a19c04093d/src/Components/Search.js"],"names":["React","useState","STUDENTS","checkValidity","joiningDate","validityDate","now","Date","today","getFullYear","getMonth","getDate","year","month","day","split","yyyy","mm","dd","maxValid","selected","Search","onSubmit","name","setName","date","setDate","resetValues","validateValue","joinDate","student","console","log","validity","isStudentExpired","error","handleClick","studentInfo","find","item","toUpperCase","isValid","data","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,iBAAzB,C,CAEA;;AACA,SAASC,aAAT,CAAuBC,WAAvB,EAAoCC,YAApC,EAAkD;AACjD,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAMC,KAAK,GAAG,IAAID,IAAJ,CAASD,GAAG,CAACG,WAAJ,EAAT,EAA4BH,GAAG,CAACI,QAAJ,EAA5B,EAA4CJ,GAAG,CAACK,OAAJ,EAA5C,CAAd;AACA,QAAM,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,IAAqBV,WAAW,CAACW,KAAZ,CAAkB,GAAlB,CAA3B;AACA,QAAM,CAACC,IAAD,EAAOC,EAAP,EAAWC,EAAX,IAAiBb,YAAY,CAACU,KAAb,CAAmB,GAAnB,CAAvB;AACA,QAAMI,QAAQ,GAAG,IAAIZ,IAAJ,CAASS,IAAT,EAAeC,EAAE,GAAG,CAApB,EAAuBC,EAAvB,CAAjB;AACA,QAAME,QAAQ,GAAG,IAAIb,IAAJ,CAASK,IAAT,EAAeC,KAAK,GAAG,CAAvB,EAA0BC,GAA1B,CAAjB;AACA,SAAQK,QAAQ,IAAIC,QAAb,IAA2BD,QAAQ,IAAIX,KAA9C;AACA;;AAID,SAASa,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA4B;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,EAAhC;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,EAAhC;;AAEA,QAAM0B,WAAW,GAAG,MAAM;AACzBD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACA,GAHD;;AAKA,QAAMI,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AAC5C,QAAGA,OAAH,EAAW;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,QAAAA,OAAD;AAAUD,QAAAA,QAAV;AAAoBI,QAAAA,QAAQ,EAAEH,OAAO,CAACzB;AAAtC,OAAZ;AACA,YAAM6B,gBAAgB,GAAG/B,aAAa,CAAC0B,QAAD,EAAWC,OAAO,CAACzB,YAAnB,CAAtC;AACA0B,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,gBAAhC;AACA,aAAO;AAAEC,QAAAA,KAAK,EAAED,gBAAgB,GAAI,UAASX,IAAK,0BAAlB,GAA8C;AAAvE,OAAP;AAEA;;AAED,WAAO;AAAEY,MAAAA,KAAK,EAAG,UAASZ,IAAK;AAAxB,KAAP;AACA,GAVD;;AAYA,QAAMa,WAAW,GAAG,MAAM;AACzB,UAAMC,WAAW,GAAGnC,QAAQ,CAACoC,IAAT,CAAcC,IAAI,IAAIhB,IAAI,CAACiB,WAAL,OAAuBD,IAAI,CAAChB,IAAL,CAAUiB,WAAV,EAA7C,CAApB,CADyB,CAEzB;AACA;AACA;AACA;;AAEA,QAAIH,WAAJ,EAAiB;AAChB,YAAMI,OAAO,GAAGtC,aAAa,CAACsB,IAAD,EAAOY,WAAW,CAAChC,YAAnB,CAA7B;AAEAoC,MAAAA,OAAO,GAAGnB,QAAQ,CAAC;AAACoB,QAAAA,IAAI,EAAEL;AAAP,OAAD,CAAX,GAAmCf,QAAQ,CAAC;AAACa,QAAAA,KAAK,EAAG,UAASZ,IAAK;AAAvB,OAAD,CAAlD;AACA,KAJD,MAIO;AACND,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,KAAK,EAAG,UAASZ,IAAK;AAAxB,OAAD,CAAR;AACA,KAbwB,CAezB;;AACA,GAhBD;;AAmBA,sBACC;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,KAAK,EAAEA,IAAd;AAAoB,IAAA,EAAE,EAAC,aAAvB;AAAqC,mBAAY,aAAjD;AAA+D,IAAA,IAAI,EAAC,MAApE;AAA2E,IAAA,SAAS,EAAC,aAArF;AAAmG,IAAA,QAAQ,EAAGoB,CAAD,IAAOnB,OAAO,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADD,eAMC;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,KAAK,EAAEpB,IAAd;AAAoB,IAAA,EAAE,EAAC,aAAvB;AAAqC,mBAAY,aAAjD;AAA+D,IAAA,IAAI,EAAC,MAApE;AAA2E,IAAA,SAAS,EAAC,aAArF;AAAmG,IAAA,QAAQ,EAAGkB,CAAD,IAAOjB,OAAO,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CAND,eAWC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,QAAlC;AAA2C,IAAA,SAAS,EAAC,YAArD;AAAkE,IAAA,OAAO,EAAET,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXD,CADD;AAeA;;AAED,eAAef,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { STUDENTS } from '../studentsList';\n\n// `joiningDate` && `validityDate` format \"yyyy-mm-dd\"\nfunction checkValidity(joiningDate, validityDate) {\n\tconst now = new Date();\n\tconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\tconst [year, month, day] = joiningDate.split('-');\n\tconst [yyyy, mm, dd] = validityDate.split('-');\n\tconst maxValid = new Date(yyyy, mm - 1, dd);\n\tconst selected = new Date(year, month - 1, day);\n\treturn (maxValid >= selected) && (maxValid >= today);\n}\n\n\n\nfunction Search({onSubmit}) {\n\tconst [name, setName] = useState();\n\tconst [date, setDate] = useState();\n\n\tconst resetValues = () => {\n\t\tsetDate('');\n\t\tsetName('')\n\t}\n\n\tconst validateValue = (joinDate, student) => {\n\t\tif(student){\n\t\t\tconsole.log({student, joinDate, validity: student.validityDate})\n\t\t\tconst isStudentExpired = checkValidity(joinDate, student.validityDate);\n\t\t\tconsole.log(\"isStudentExpired\", isStudentExpired)\n\t\t\treturn { error: isStudentExpired ? `Sorry, ${name}'s validity has Expired!` : null}\n\n\t\t}\n\n\t\treturn { error: `Sorry, ${name} is not a verified student!` }\n\t}\n\n\tconst handleClick = () => {\n\t\tconst studentInfo = STUDENTS.find(item => name.toUpperCase() === item.name.toUpperCase());\n\t\t// const validate = validateValue(date, studentInfo);\n\t\t// const submitParameters = validate.error || { data: studentInfo };\n\t\t// console.log({submitParameters})\n\t\t// onSubmit(submitParameters)\n\n\t\tif (studentInfo) {\n\t\t\tconst isValid = checkValidity(date, studentInfo.validityDate);\n\n\t\t\tisValid ? onSubmit({data: studentInfo}) : onSubmit({error: `Sorry, ${name}'s validity has Expired!`})\n\t\t} else {\n\t\t\tonSubmit({ error: `Sorry, ${name} is not a verified student!` })\n\t\t}\n\n\t\t// resetValues()\n\t}\n\n\n\treturn (\n\t\t<div className=\"my-50 layout-row align-items-end justify-content-end\">\n\t\t\t<label htmlFor=\"studentName\">Student Name:\n\t\t\t\t<div>\n\t\t\t\t\t<input value={name} id=\"studentName\" data-testid=\"studentName\" type=\"text\" className=\"mr-30 mt-10\" onChange={(e) => setName(e.target.value)}/>\n\t\t\t\t</div>\n\t\t\t</label>\n\t\t\t<label htmlFor=\"joiningDate\">Joining Date:\n\t\t\t\t<div>\n\t\t\t\t\t<input value={date} id=\"joiningDate\" data-testid=\"joiningDate\" type=\"date\" className=\"mr-30 mt-10\" onChange={(e) => setDate(e.target.value)}/>\n\t\t\t\t</div>\n\t\t\t</label>\n\t\t\t<button type=\"button\" data-testid=\"addBtn\" className=\"small mb-0\" onClick={handleClick}>Add</button>\n\t\t</div>\n\t);\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}